{"version":3,"file":"commands.js","mappings":"YACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCKxBC,OAAOC,SAAQ,WACb,KAMuB,oBAATC,KACVA,KACkB,oBAAXH,OACPA,YACkB,IAAXI,EAAAA,EACPA,EAAAA,OACAC,GA0BJC,OAnBF,SAAgBC,GACd,IAAMC,EAAU,CACdC,KAAMR,OAAOS,aAAaC,4BAA4BC,qBACtDJ,QAAS,oBACTK,KAAM,aACNC,YAAY,GAIdb,OAAOc,QAAQC,QAAQC,KAAKC,qBAAqBC,aAAa,SAAUX,GAGxED,EAAMa,WACR,EAoBAnB,OAAOoB,QAAQC,UAAU,mBARzB,SAAyBf,GAEvB,IACIgB,EAAOC,UADD,kCAEVxB,OAAOyB,KAAKF,EAAM,mBAElBhB,EAAMa,WACR,G","sources":["webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/webpack/runtime/global","webpack://excel-custom-functions-js/./src/commands/commands.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called\n});\n\n/* global global, self, window, console */\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event\n */\nfunction action(event) {\n  const message = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\n// Globals\nconst g = getGlobal();\n\n// the add-in command functions need to be available in global scope\ng.action = action;\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event {Office.AddinCommands.Event}\n */\nfunction urlGotoBlogHelp(event) {\n  // window.location.replace(\"http://www.w3schools.com\");\n  var uri = \"https://brfluid.tistory.com/52\";\n  var res1 = encodeURI(uri); // url문자를 반드시 먼저 인코딩한다.\n  window.open(res1, \"PipeDesignCheck\");\n  // Calling event.completed is required. event.completed lets the platform know that processing has completed.\n  event.completed();\n}\nOffice.actions.associate(\"urlGotoBlogHelp\", urlGotoBlogHelp);"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","Office","onReady","self","global","undefined","action","event","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","mailbox","item","notificationMessages","replaceAsync","completed","actions","associate","res1","encodeURI","open"],"sourceRoot":""}